#!/bin/bash

# CyberHawk Setup Script
# Author: Your Name
# License: MIT

set -e  # Exit on any error

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# Configuration
CYBERHAWK_DIR="$HOME/CyberHawk"
WORDLIST_DIR="$HOME/wordlists"
TOOLS_DIR="$HOME/tools"

print_status() {
    echo -e "${BLUE}[*]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[✓]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[!]${NC} $1"
}

print_error() {
    echo -e "${RED}[✗]${NC} $1"
}

print_banner() {
    echo -e "${CYAN}"
    cat << "EOF"
    ╔══════════════════════════════════════════════════════════════╗
    ║                   🦅 C Y B E R H A W K 🦅                   ║
    ║                 Advanced Setup Installation                  ║
    ╚══════════════════════════════════════════════════════════════╝
EOF
    echo -e "${NC}"
}

check_root() {
    if [ "$EUID" -eq 0 ]; then
        print_warning "Running as root is not recommended. Continuing anyway..."
    fi
}

check_dependencies() {
    print_status "Checking system dependencies..."
    
    local missing_deps=()
    
    # Check for essential tools
    for dep in python3 pip3 git wget curl; do
        if ! command -v $dep &> /dev/null; then
            missing_deps+=("$dep")
        fi
    done
    
    if [ ${#missing_deps[@]} -ne 0 ]; then
        print_warning "Missing dependencies: ${missing_deps[*]}"
        install_system_deps "${missing_deps[@]}"
    else
        print_success "All dependencies found"
    fi
}

install_system_deps() {
    print_status "Installing system dependencies..."
    
    if command -v apt-get &> /dev/null; then
        sudo apt-get update
        sudo apt-get install -y python3 python3-pip python3-venv git wget curl
    elif command -v yum &> /dev/null; then
        sudo yum install -y python3 python3-pip git wget curl
    elif command -v dnf &> /dev/null; then
        sudo dnf install -y python3 python3-pip git wget curl
    else
        print_error "Unsupported package manager. Please install manually: $*"
        exit 1
    fi
}

create_directories() {
    print_status "Creating directory structure..."
    
    mkdir -p "$CYBERHAWK_DIR" "$WORDLIST_DIR" "$TOOLS_DIR"
    print_success "Created directories: CyberHawk, wordlists, tools"
}

setup_virtualenv() {
    print_status "Setting up Python virtual environment..."
    
    cd "$CYBERHAWK_DIR"
    python3 -m venv venv
    source venv/bin/activate
    
    print_success "Virtual environment created"
}

install_python_deps() {
    print_status "Installing Python dependencies..."
    
    source "$CYBERHAWK_DIR/venv/bin/activate"
    
    # Create requirements.txt if it doesn't exist
    if [ ! -f "$CYBERHAWK_DIR/requirements.txt" ]; then
        cat > "$CYBERHAWK_DIR/requirements.txt" << EOF
# CyberHawk Requirements
requests>=2.28.0
colorama>=0.4.0
urllib3>=1.26.0
beautifulsoup4>=4.11.0
lxml>=4.9.0
python-dotenv>=0.19.0
tqdm>=4.64.0
EOF
    fi
    
    pip install --upgrade pip
    pip install -r requirements.txt
    
    print_success "Python dependencies installed"
}

download_wordlists() {
    print_status "Downloading essential wordlists..."
    
    cd "$WORDLIST_DIR"
    
    # Subdomain wordlists
    if [ ! -f subdomains.txt ]; then
        print_status "Downloading subdomain wordlist..."
        wget -q https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/DNS/subdomains-top1million-5000.txt -O subdomains-top5000.txt
        wget -q https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/DNS/deepmagic.com-prefixes-top50000.txt -O subdomains-deepmagic.txt
        cat subdomains-top5000.txt subdomains-deepmagic.txt | sort -u > subdomains.txt
        rm subdomains-top5000.txt subdomains-deepmagic.txt
    fi
    
    # Common web wordlists
    if [ ! -f common.txt ]; then
        print_status "Downloading common web wordlist..."
        wget -q https://raw.githubusercontent.com/danielmiessler/SecLists/master/Discovery/Web-Content/common.txt -O common.txt
    fi
    
    print_success "Wordlists downloaded to $WORDLIST_DIR"
}

setup_cyberhawk() {
    print_status "Setting up CyberHawk..."
    
    # Check if cyberhawk.py exists in current directory
    if [ -f "./cyberhawk.py" ]; then
        cp ./cyberhawk.py "$CYBERHAWK_DIR/"
        cp ./requirements.txt "$CYBERHAWK_DIR/" 2>/dev/null || true
    else
        print_warning "cyberhawk.py not found in current directory"
        print_status "Creating default CyberHawk script..."
        # This would be the content of your cyberhawk.py
        # You might want to download it from a repository instead
        cat > "$CYBERHAWK_DIR/cyberhawk.py" << 'EOF'
#!/usr/bin/env python3
"""
CyberHawk - Advanced Subdomain Discovery Tool
[Script content would be here]
"""
print("Please add your cyberhawk.py script to this directory")
EOF
    fi
    
    chmod +x "$CYBERHAWK_DIR/cyberhawk.py"
    
    # Create launcher script
    cat > "$CYBERHAWK_DIR/launch.sh" << 'EOF'
#!/bin/bash
cd "$(dirname "$0")"
source venv/bin/activate
python3 cyberhawk.py "$@"
EOF
    
    chmod +x "$CYBERHAWK_DIR/launch.sh"
    
    # Create desktop entry (optional)
    if [ -d "$HOME/Desktop" ]; then
        cat > "$HOME/Desktop/CyberHawk.desktop" << EOF
[Desktop Entry]
Version=1.0
Type=Application
Name=CyberHawk
Comment=Advanced Subdomain Discovery Tool
Exec=$CYBERHAWK_DIR/launch.sh
Icon=utilities-terminal
Terminal=true
Categories=Utility;Security;
EOF
        chmod +x "$HOME/Desktop/CyberHawk.desktop"
    fi
    
    print_success "CyberHawk setup complete"
}

create_aliases() {
    print_status "Creating shell aliases..."
    
    local shell_rc=""
    
    if [ -n "$ZSH_VERSION" ]; then
        shell_rc="$HOME/.zshrc"
    elif [ -n "$BASH_VERSION" ]; then
        shell_rc="$HOME/.bashrc"
    else
        shell_rc="$HOME/.bashrc"
    fi
    
    # Add aliases to shell RC
    if [ -f "$shell_rc" ]; then
        if ! grep -q "CYBERHAWK" "$shell_rc"; then
            cat >> "$shell_rc" << EOF

# CyberHawk Aliases
alias cyberhawk="$CYBERHAWK_DIR/launch.sh"
alias hawk="$CYBERHAWK_DIR/launch.sh"
export WORDLISTS_DIR="$WORDLIST_DIR"
export TOOLS_DIR="$TOOLS_DIR"
EOF
            print_success "Aliases added to $shell_rc"
        else
            print_warning "Aliases already exist in $shell_rc"
        fi
    fi
}

show_usage() {
    print_status "CyberHawk is ready to use!"
    echo ""
    echo -e "${GREEN}Usage:${NC}"
    echo "  cyberhawk example.com -w \$WORDLISTS_DIR/subdomains.txt"
    echo "  hawk example.com -w ~/wordlists/subdomains.txt -t 20"
    echo ""
    echo -e "${GREEN}Available wordlists:${NC}"
    ls -la "$WORDLIST_DIR" | grep -E "\.(txt|lst)$" | awk '{print "  " $9}'
    echo ""
    echo -e "${YELLOW}Remember to run: source ~/.bashrc${NC}"
}

main() {
    print_banner
    check_root
    check_dependencies
    create_directories
    setup_virtualenv
    install_python_deps
    download_wordlists
    setup_cyberhawk
    create_aliases
    show_usage
    
    echo ""
    print_success "CyberHawk installation completed successfully! 🦅"
    echo ""
}

# Run main function
main "$@"
